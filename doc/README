SiT (Support Incident Tracker) - Support call tracking system
Copyright (C) 2000-2008 Salford Software Ltd. and Contributors
This software may be used and distributed according to the terms
of the GNU General Public License, incorporated herein by reference.
--------------------------------------------------------------------

            This is a temporary readme with only very basic
            instructions, for more help please refer to
            http://sourceforge.net/projects/sitracker/

     README

        * About Support Incident Tracker
        * Security Recommendations
        * Installing
        * Upgrading
        * Configuring
        * Regular Scheduled Tasks
        * Inbound email
        * Creating Plugins
        * Getting help
        * Reporting bugs
        * Contributing to the SiT! project


About Support Incident Tracker
------------------------------
Support Incident Tracker (SiT!) grew out of an application developed
by Salford Software called Webtrack which is used internally to
manage support incidents.

SiT! is a web-based application that manages various aspects of a
technical support department, the main purpose is to record dealings
with customers while providing support.

Maintainers:
    Ivan Lucas <ivanlucas[at]users.sourceforge.net>
    Tom Gerrard


Security Recommendations
------------------------
SiT! Versions 3.23 and later no longer require the php.ini setting
register_globals to be on and all external data is checked before use.

    * We *strongly* recommend that you make sure your php.ini has
      register_globals set OFF, this has been the default since
      PHP 4.2.0.

    * Your SiT! includes directory should be outside the web root
      and your PHP include path should refer to it.


Installing
----------

    Requirements:
        A web server (Apache recommended)
        PHP >= 4.3.0 (Released December 2002)
        MySQL >= 4.0.18

    Instructions:

        - Copy the files to a directory on your web server

        - Make the htdocs/ directory your web root

        - Configure your php.ini include_path setting to point to the
          includes/ subdirectory
            If you cannot edit php.ini, the alternative method of
            setting the include path is by editing
            set_include_path.inc.php which is in the htdocs
            directory.  If you do this you will need to edit the
            file each time you upgrade, or back it up and restore
            afterwards.

        - In your browser visit setup.php which will prompt you
          for a few important settings and take you through the
          process of creating the database schema

        - setup.php will prompt you to add an admin account,
          make a note of the password you choose for this account

        - Now visit index.php in your browser and login using
          'admin' as the username and the password that you
          chose during setup

        - Within sit go to SiT! -> Control Panel -> Manage Users
          -> Add User to create more users


Configuring
-----------
After you've run setup.php and installed SiT! you will have a file
named config.inc.php in your includes directory  This file contains
only the basic settings that are available, for a full list of
settings refer to the defaults.inc.php.  Copy the settings over to
the config.inc.php before you change them, rather than modifying the
defaults as the defaults.inc.php file will be overwritten when you
upgrade.

When SiT! is configured we advise you to make the config.inc.php file
read only, this will prevent setup.php being used maliciously to
compromise your installation.


Upgrading
---------
See the UPGRADE file for instructions


Regular Scheduled Tasks
-----------------------
SiT! has a script called auto.php that you should run periodically via
a crontab or other method.

When called via http the auto.php script accepts two parameters
'actions' and 'verbose'.

    actions     a comma seperated list of tasks to run (no spaces) or
                'all' to run all tasks
    verbose     when 'true' text will be output describing whats
                happening, if omited the script will produce no output

e.g. http://localhost/sit/auto.php?actions=CloseIncidents,PurgeJournal
or   http://localhost/sit/auto.php?actions=TimeCalc&verbose=TRUE

When called from the console the auto.php again accepts two
parameters, the first being a comma seperated list of tasks to run
(no spaces) or 'all' to run all tasks.

e.g. php -f htdocs/auto.php CloseIncidents,PurgeJournal

Actions:
    CloseIncidents      Close incidents that are marked for closure
                        according to the config setting
                        $CONFIG['closure_delay']

    PurgeJournal        Delete old journal entries according to the
                        config setting $CONFIG['journal_purge_after']

    TimeCalc            Calculate SLA Target Times and trigger
                        OUT_OF_SLA and OUT_OF_REVIEW system email
                        templates where appropriate.

    SetUserStatus       (Experimental!) This will set users status
                        based on data from their holiday calendar.
                        e.g. Out of Office/Away sick.

An example crontab might look like this:
6 * * * * /usr/bin/php -f /var/www/sit/htdocs/auto.php TimeCalc
30 * * * * /usr/bin/php -f /var/www/sit/htdocs/auto.php CloseIncidents,PurgeJournal


Inbound email
-------------
SiT is perfectly usable without automatic inclusion of inbound email into the database.
Not everybody will be able to use this feature because it currently requires access to
an MTA on your server, shell access to the server and PHP compiled as a CGI binary.

All that is required is to configure your MTA to pipe emails through the inbound_email.php
script included with SiT.

Some helpful information regarding configuring your MTA to pipe emails to a PHP script
is available here http://evolt.org/incoming_mail_and_php


Creating Plugins
----------------
Your plugin is a regular PHP script, place your plugin in the plugins
directory giving it a .php extension as normal.
Set the $CONFIG['plugins'] array to include your plugin name
(minus the .php extension)

In your plugin call the function plugin_register() to set up your hook.

e.g.
plugin_register('a_context', 'my_function');

the function my_function() will then be called whenever the context
'a_context' is reached. We suggest you name your functions with a
unique prefix to avoid clashes with existing functions or other plugins

Set the following variables in your plugin, where 'myplugin' is the
name of your plugin (minus the .php extension)

$PLUGININFO['myplugin']['version']
$PLUGININFO['myplugin']['description']
$PLUGININFO['myplugin']['author']
$PLUGININFO['myplugin']['legal']
$PLUGININFO['myplugin']['sitminversion']
$PLUGININFO['myplugin']['sitmaxversion']

sitminversion and sitmaxversion should be floats that define the minimum version of SiT
required for your plugin to run, and the maximum version you're plugin is likely to support.


Available Plugin Contexts
-------------------------
context                     purpose
-------                     -------
cp_menu                     Add to the control panel menu
edit_profile_form           Add to the edit profile form
save_profile_form           Perform an action when the edit profile
                             form is saved
reports_menu                Add to the reports menu
edit_contact_form           Add to the edit contact form
save_contact_form           Perform an action when the edit contact
                             form is saved
site_created                Perform an action after a site is created
site_details                Add to the site details page
edit_site_form              Add to the edit site form
feedback_reports_menu       Add to the feedback reports menu
incident_created            Perform an action after an incident is
                             created
incident_created_contract   Perform an action after an incident is
                             created and logged against a contract
incident_created_site       Perform an action after an incident is
                             created and logged against a site
incident_closed             Perform an action after an incident is
                             closed
new_incident_form           Add to the new incident form
edit_incident_form          Add to the edit incident form
incident_edited             Perform an action after an incident is
                             updated
incident_details            Add to the incident details page
holiday_chart_cal           Add to the top of the holiday chart page
add_user_form               Add to the add user form
statistics_table_overview   Add to the statistics table
about                       Add to the about page
user_created                Perform an action after a user has been
                             created

If your plugin needs to use additional pages, put those pages in a
subdirectory (named for your plugin) inside htdocs/ext
(e.g.  htdocs/ext/myplugin/mypage.php)


Getting Help
------------
If you need help installing or using Support Incident Tracker
please feel welcome to join our mailing list by sending an email to
sit-subscribe@lists.salfordsoftware.co.uk or posting a message on our
forum at http://sourceforge.net/forum/?group_id=160319

We also now have an IRC channel.  #sit on the freenode network, we'd
love for you to join us, see here http://sitracker.sourceforge.net/IRC
for more info.


Reporting Bugs
--------------
In the (hopefully unlikely) event that you find a bug in SiT! feel free
to report it via our bug tracker
at http://sourceforge.net/tracker/?group_id=160319&atid=815372

If you're not sure whether the problem you've found is actually a bug,
please discuss it with us first.


Contributing to the SiT! project
--------------------------------
Sourceforge Project Page: http://sourceforge.net/projects/sitracker/

The development of Support Incident Tracker as well as discussions as
to where the program should head for future versions is open and takes
place over the Internet. If you would like to contribute to the
project, please do not hesitate to contact the developers. There are
many ways in which you can help Support Incident Tracker:

    * Reporting bugs or suggesting improvements
    * Submitting patches to fix bugs or ad features
    * Writing good documentation or translating it to other languages
    * Helping others to install and use SiT!

    * And of course...coding with us!

As you see, there are many ways in which you can contribute. All of
them are very important and everyone is welcome to participate.

The Support Incident Tracker developers can be reached via the mailing
list, see here for more info http://sourceforge.net/mail/?group_id=160319

We also now have an IRC channel.  #sit on the freenode network, we'd
love for you to join us, see here http://sitracker.sourceforge.net/IRC
for more info.
